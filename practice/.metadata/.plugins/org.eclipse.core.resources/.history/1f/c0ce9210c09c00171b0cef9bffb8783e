package DP;

public class MergeStones {
	public int merge(int[] stones){
		if(stones == null || stones.length == 0){
			return 0;
		}
		int length = stones.length;
		int[][] cost = new int[length][length];
		int[][] subsum = new int[length][length];
		for(int i = 0 ; i < length ; i++){
			for(int j = i ; j >= 0 ; j--){
				if(j == i){
					cost[j][i] = 0;
					subsum[j][i] = stones[i];
				}else{
					cost[j][i] = cost[j][i - 1] + stones[i];
					for(int k = j ; k < i ; k++){
						subsum[j][i] = Math.min(subsum[j][i] , subsum[j][k] + subsum[k + 1][i] + cost[j][i]);
						
					}
				}
			}
		}
		return subsum[0][length - 1];
	}
}
