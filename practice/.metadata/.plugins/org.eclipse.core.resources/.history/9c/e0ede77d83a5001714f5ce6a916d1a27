package Tree;

import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Set;

public class TopView {
	public void TopView(TreeNode root){
		if(root == null){
			return;
		}
		Queue<Pair> queue = new LinkedList<>();
		Set<Integer> set = new HashSet<>();
		queue.offer(new Pair(root , 0));
		while(!queue.isEmpty()){
			Pair q = queue.poll();
			if(!set.contains(q.breath)){
				set.add(q.breath);
				System.out.println(q.root.key);
			}
			if(q.root.left != null){
				queue.offer(new Pair(q.root.left , q.breath - 1));
			}
			if(q.root.right != null){
				queue.offer(new Pair(q.root.right , q.breath + 1));
			}
		}
		
		
	}
	static class Pair{
		TreeNode root;
		int breath;
		public Pair(TreeNode root , int breadth){
			this.root = root;
			this.breath = breadth;
		}
	}
}
