package String;

import java.util.Deque;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

import Tree.TreeNode;

public class Zigzag {
	public List<Integer> zigzag(TreeNode root){
		List<Integer> result = new LinkedList<Integer>();
		Deque<TreeNode> queue = new LinkedList<TreeNode>();
		if(root == null){
			return result;
		}
		queue.offerFirst(root);
		int flag = 0;
		while(!queue.isEmpty()){
			int size = queue.size();
			for(int i = 0 ; i < size ; i++){
				TreeNode cur = queue.pollLast();
				if(flag == 0){
					result.add(cur.key);
				}else{
					result.add(0, cur.key);
				}
				if(cur.left != null){
					queue.offerFirst(cur.left);
				}
				if(cur.right != null){
					queue.offerFirst(cur.right);
				}
			}
			flag = 1 -flag;
		}
		return result;
	}
}
